setwd("C:/Users/Subho/Dropbox/Blood-brain")
library(data.table)
library(e1071)
library(pROC)
# basak data
basak1 = fread("BBB-415.csv")
basak2 = fread("BBB-413-Polly.csv")
names(basak2)[1] = "No."
basak3 = fread("BBB-413-Triplet.csv")
names(basak3)[1] = "No."
basak = Reduce(merge, list(basak1, basak2, basak3))
# remove NA
NA.rows = apply(basak,1,function(x) -99 %in% x)
basak = basak[NA.rows==0]
# diudea data
diudea1 = fread("All descriptors  - BBB.csv")
diudea2 = fread("BBB set 2.csv")
diudea = cbind(diudea1, diudea2)
names(diudea)[2] = "Name"
# standardize names
names1 = basak[,Name]
for(rep in c(".mol2"," ","-","_")){
names1 = gsub(rep,"",names1)
}
basak1 = basak[,Name := toupper(names1)]
names2 = diudea[,Name]
for(rep in c(".mol2"," ","-","_")){
names2 = gsub(rep,"",names2)
}
diudea1 = diudea[,Name := toupper(names2)]
# remove NA cols
NA.counts = as.numeric(apply(diudea1, 2, function(x) sum(is.na(x))))
diudea1 = data.table(data.frame(diudea1)[,which(NA.counts==0)])
# find matches and merge
n.basak = nrow(basak1)
closest_match = basak1[,Name]
distance = rep(0, n.basak)
for(i in 1:n.basak){
dist.i = as.numeric(lapply(diudea1[,Name], function(x)
hamming.distance(strsplit(basak1[i,Name],"")[[1]], strsplit(x,"")[[1]])))
closest_match[i] = diudea1[which.min(dist.i),Name]
distance[i] = dist.i[which.min(dist.i)]
}
df = data.table(cbind(basak1[,Name], closest_match, distance))
final.set = df[distance<=1,closest_match] # analyze these compounds
# build final dataset
data = merge(basak1, diudea1[Name %in% final.set],by="Name")
data1 = data[,-c(1,2,3,5,458)]
data1[, Class01 := 1]
data1[Class=="n", Class01 := 0]
setwd("c:/study/Blood-brain/Codes/")
library(data.table)
library(e1071)
library(pROC)
# basak data
basak1 = fread("BBB-415.csv")
basak2 = fread("BBB-413-Polly.csv")
names(basak2)[1] = "No."
basak3 = fread("BBB-413-Triplet.csv")
names(basak3)[1] = "No."
basak = Reduce(merge, list(basak1, basak2, basak3))
# remove NA
NA.rows = apply(basak,1,function(x) -99 %in% x)
basak = basak[NA.rows==0]
# diudea data
diudea1 = fread("All descriptors  - BBB.csv")
diudea2 = fread("BBB set 2.csv")
diudea = cbind(diudea1, diudea2)
names(diudea)[2] = "Name"
# standardize names
names1 = basak[,Name]
for(rep in c(".mol2"," ","-","_")){
names1 = gsub(rep,"",names1)
}
basak1 = basak[,Name := toupper(names1)]
names2 = diudea[,Name]
for(rep in c(".mol2"," ","-","_")){
names2 = gsub(rep,"",names2)
}
diudea1 = diudea[,Name := toupper(names2)]
# remove NA cols
NA.counts = as.numeric(apply(diudea1, 2, function(x) sum(is.na(x))))
diudea1 = data.table(data.frame(diudea1)[,which(NA.counts==0)])
# find matches and merge
n.basak = nrow(basak1)
closest_match = basak1[,Name]
distance = rep(0, n.basak)
for(i in 1:n.basak){
dist.i = as.numeric(lapply(diudea1[,Name], function(x)
hamming.distance(strsplit(basak1[i,Name],"")[[1]], strsplit(x,"")[[1]])))
closest_match[i] = diudea1[which.min(dist.i),Name]
distance[i] = dist.i[which.min(dist.i)]
}
df = data.table(cbind(basak1[,Name], closest_match, distance))
final.set = df[distance<=1,closest_match] # analyze these compounds
# build final dataset
data = merge(basak1, diudea1[Name %in% final.set],by="Name")
data1 = data[,-c(1,2,3,5,458)]
data1[, Class01 := 1]
data1[Class=="n", Class01 := 0]
library(data.table)
library(e1071)
library(pROC)
# basak data
basak1 = fread("BBB-415.csv")
setwd("c:/study/Blood-brain/Data/")
# basak data
basak1 = fread("BBB-415.csv")
basak2 = fread("BBB-413-Polly.csv")
names(basak2)[1] = "No."
basak3 = fread("BBB-413-Triplet.csv")
names(basak3)[1] = "No."
basak = Reduce(merge, list(basak1, basak2, basak3))
# remove NA
NA.rows = apply(basak,1,function(x) -99 %in% x)
basak = basak[NA.rows==0]
# diudea data
diudea1 = fread("All descriptors  - BBB.csv")
diudea2 = fread("BBB set 2.csv")
diudea = cbind(diudea1, diudea2)
names(diudea)[2] = "Name"
# standardize names
names1 = basak[,Name]
for(rep in c(".mol2"," ","-","_")){
names1 = gsub(rep,"",names1)
}
basak1 = basak[,Name := toupper(names1)]
names2 = diudea[,Name]
for(rep in c(".mol2"," ","-","_")){
names2 = gsub(rep,"",names2)
}
diudea1 = diudea[,Name := toupper(names2)]
# remove NA cols
NA.counts = as.numeric(apply(diudea1, 2, function(x) sum(is.na(x))))
diudea1 = data.table(data.frame(diudea1)[,which(NA.counts==0)])
# find matches and merge
n.basak = nrow(basak1)
closest_match = basak1[,Name]
distance = rep(0, n.basak)
for(i in 1:n.basak){
dist.i = as.numeric(lapply(diudea1[,Name], function(x)
hamming.distance(strsplit(basak1[i,Name],"")[[1]], strsplit(x,"")[[1]])))
closest_match[i] = diudea1[which.min(dist.i),Name]
distance[i] = dist.i[which.min(dist.i)]
}
df = data.table(cbind(basak1[,Name], closest_match, distance))
final.set = df[distance<=1,closest_match] # analyze these compounds
# build final dataset
data = merge(basak1, diudea1[Name %in% final.set],by="Name")
data1 = data[,-c(1,2,3,5,458)]
data1[, Class01 := 1]
data1[Class=="n", Class01 := 0]
data1[,.N]
dim(data1)
data1[1]
test = sample(1:nrow(data1),50,replace=F)
rfmod = ranger(as.factor(Class01)~.-Class, data=data1[-test,1:200],
importance="impurity",probability = TRUE, seed=083120181)
preds = predict(rfmod, data1[test,], type="response")$predictions[,2]
roc(data4$Class01[test],preds)
# model
test = sample(1:nrow(data1),50,replace=F)
rfmod = ranger(as.factor(Class01)~.-Class, data=data1[-test,1:200],
importance="impurity",probability = TRUE, seed=083120181)
library(ranger)
rfmod = ranger(as.factor(Class01)~.-Class, data=data1[-test,1:200],
importance="impurity",probability = TRUE, seed=083120181)
names(data1)
rfmod = ranger(as.factor(Class01)~.-Class, data=data1[-test,1:200],
importance="impurity",probability = TRUE, seed=083120181)
rfmod = ranger(Class01~.-Class, data=data1[-test,1:200],
importance="impurity",probability = TRUE, seed=083120181)
data1[-test,1:200][1]
test = sample(1:nrow(data1),50,replace=F)
rfmod = ranger(as.factor(Class)~., data=data1[-test,1:200],
importance="impurity",probability = TRUE, seed=083120181)
preds = predict(rfmod, data1[test,], type="response")$predictions[,2]
roc(data4$Class01[test],preds)
names(data)[1:5]
data[1]
data2 = data[,-(1:5)]
data2[1]
names(data1)
names(data2)
data2 = data1[,-(1:5)]
dim(data2)
dim(data1)
names(data2)
fwrite(data2. file="BBB_processed.csv")
fwrite(data2, file="BBB_processed.csv")
load("C:/Study/Statchem-q2/Data/lta98.rda")
